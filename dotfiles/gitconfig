[alias]
        st  = status
        dc  = diff --cached
        dcw = diff --cached --color-words
        dw  = diff --color-words
        cm = commit -m
        fix = commit --amend
        pfl = push --force-with-lease
        graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
        update = pull --rebase origin
        prune-local-branches = "!for branch in $(gh pr list --state closed --json headRefName --jq '.[].headRefName'); do if git rev-parse --verify --quiet refs/heads/$branch >/dev/null; then git branch -D $branch; fi; done"
        magic-main = "!git checkout main && git pull --rebase origin main"
        branch = branch --sort=-committerdate
        irebase = "!git rebase -i $(git merge-base HEAD origin/main)"
[user]
	name = Philip Theus
        useConfigOnly = true
	signingkey = /home/philip/.ssh/id_rsa.pub
	email = philip@simplexity.quest
[color]
        ui = true
[push]
        default = current
	autoSetupRemote = true
[mergetool]
        prompt = false
        keepBackup = false
        keepTemporaries = false
[merge]
        tool = labeled-meld
[mergetool "labeled-meld"]
        cmd = `which meld` --output=$MERGED \
              $LOCAL  --label 'current branch' \
              $BASE   --label 'common base (and result file)' \
              $REMOTE --label 'to be merged' \
              2>/dev/null
        trustExitCode = false
[core]
        excludesfile = ~/.gitignore
[commit]
	gpgsign = true
[fetch]
        prune = true
[rebase]
        autoStash = true
        abbreviateCommands = true
[remote]
        pushDefault = origin
[pull]
        rebase = true
[branch]
        autoSetupRebase = always
[grep]
        lineNumber = true
[github]
        user = exterm
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = main
[gpg]
	format = ssh
[help]
  autocorrect = 1
